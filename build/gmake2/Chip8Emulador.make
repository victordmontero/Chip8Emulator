# Alternative GNU Make project makefile autogenerated by Premake

ifndef config
  config=debug_windows
endif

ifndef verbose
  SILENT = @
endif

.PHONY: clean prebuild prelink

SHELLTYPE := msdos
ifeq (,$(ComSpec)$(COMSPEC))
  SHELLTYPE := posix
endif
ifeq (/bin,$(findstring /bin,$(SHELL)))
  SHELLTYPE := posix
endif

# Configurations
# #############################################

RESCOMP = windres
FORCE_INCLUDE +=
ALL_CPPFLAGS += $(CPPFLAGS) -MMD -MP $(DEFINES) $(INCLUDES)
ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
LIBS += -lSDL2main -lSDL2 -lSDL2_image
LDDEPS +=
LINKCMD = $(CXX) -o "$@" $(OBJECTS) $(RESOURCES) $(ALL_LDFLAGS) $(LIBS)
define PREBUILDCMDS
endef
define PRELINKCMDS
endef
define POSTBUILDCMDS
endef

ifeq ($(config),debug_windows)
TARGETDIR = ../../bin/Debug
TARGET = $(TARGETDIR)/Chip8Emulador.exe
OBJDIR = obj/Windows/Debug
DEFINES += -DDEBUG -DWINDOWS
INCLUDES += -I../../include -I../../libs/SDL2-2.0.5/include -I../../libs/SDL2_image-2.0.1/include -I../../libs/SDL2_ttf-2.0.14/include
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -g
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -g
ALL_LDFLAGS += $(LDFLAGS) -L../../libs/SDL2-2.0.5/lib/x86 -L../../libs/SDL2_image-2.0.1/lib/x86 -L../../libs/SDL2_ttf-2.0.14/lib/x86
endif

ifeq ($(config),debug_linux)
TARGETDIR = ../../bin/Debug
TARGET = $(TARGETDIR)/Chip8Emulador
OBJDIR = obj/Linux/Debug
DEFINES += -DDEBUG -DLINUX
INCLUDES += -I../../include
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -g
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -g
ALL_LDFLAGS += $(LDFLAGS)
endif

ifeq ($(config),release_windows)
TARGETDIR = ../../bin/Release
TARGET = $(TARGETDIR)/Chip8Emulador.exe
OBJDIR = obj/Windows/Release
DEFINES += -DNDEBUG -DWINDOWS
INCLUDES += -I../../include -I../../libs/SDL2-2.0.5/include -I../../libs/SDL2_image-2.0.1/include -I../../libs/SDL2_ttf-2.0.14/include
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -O2
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -O2
ALL_LDFLAGS += $(LDFLAGS) -L../../libs/SDL2-2.0.5/lib/x86 -L../../libs/SDL2_image-2.0.1/lib/x86 -L../../libs/SDL2_ttf-2.0.14/lib/x86 -s
endif

ifeq ($(config),release_linux)
TARGETDIR = ../../bin/Release
TARGET = $(TARGETDIR)/Chip8Emulador
OBJDIR = obj/Linux/Release
DEFINES += -DNDEBUG -DLINUX
INCLUDES += -I../../include
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -O2
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -O2
ALL_LDFLAGS += $(LDFLAGS) -s
endif

# Per File Configurations
# #############################################


# File sets
# #############################################

OBJECTS :=

OBJECTS += $(OBJDIR)/Chip8Machine.o
OBJECTS += $(OBJDIR)/main.o

# Rules
# #############################################

all: prebuild prelink $(TARGET) | $(TARGETDIR) $(OBJDIR)
	@:

$(TARGET): $(GCH) $(OBJECTS) $(LDDEPS) | $(TARGETDIR)
	@echo Linking Chip8Emulador
	$(SILENT) $(LINKCMD)
	$(POSTBUILDCMDS)

$(TARGETDIR):
	@echo Creating $(TARGETDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(TARGETDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(TARGETDIR))
endif

$(OBJDIR):
	@echo Creating $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(OBJDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(OBJDIR))
endif

clean:
	@echo Cleaning Chip8Emulador
ifeq (posix,$(SHELLTYPE))
	$(SILENT) rm -f  $(TARGET)
	$(SILENT) rm -rf $(OBJDIR)
else
	$(SILENT) if exist $(subst /,\\,$(TARGET)) del $(subst /,\\,$(TARGET))
	$(SILENT) if exist $(subst /,\\,$(OBJDIR)) rmdir /s /q $(subst /,\\,$(OBJDIR))
endif

prebuild:
	$(PREBUILDCMDS)

prelink:
	$(PRELINKCMDS)

ifneq (,$(PCH))
$(OBJECTS): $(GCH) $(PCH) | $(OBJDIR) $(PCH_PLACEHOLDER)
$(GCH): $(PCH) | $(OBJDIR)
	@echo $(notdir $<)
	$(SILENT) $(CXX) -x c++-header $(ALL_CXXFLAGS) -o "$@" -MF "$(@:%.gch=%.d)" -c "$<"
$(PCH_PLACEHOLDER): $(GCH) | $(OBJDIR)
	ifeq (posix,$(SHELLTYPE))
		$(SILENT) touch "$@"
	else
		$(SILENT) echo $null >> "$@"
	endif
else
$(OBJECTS): | $(OBJDIR)
endif


# File Rules
# #############################################

$(OBJDIR)/Chip8Machine.o: ../../src/Chip8Machine.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/main.o: ../../src/main.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"

-include $(OBJECTS:%.o=%.d)
ifneq (,$(PCH))
  -include "$(PCH_PLACEHOLDER).d"
endif